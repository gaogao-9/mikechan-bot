"use strict";// エントリポイント
let startSlackBot=(()=>{var _ref=_asyncToGenerator(function*(){// SlackBot用インスタンスの生成
const slackBot=new _slackbots2.default({token:process.env.NODE_SLACK_BOT_TOKEN});// メッセージオブジェクトの整形クラスの生成
const getMessageFormatter=new _GetMessageFormatter2.default(slackBot);const postMessageFormatter=new _PostMessageFormatter2.default(slackBot);// デバッグ用(投稿を止める)
// slackBot.postMessage = ((_,__,messageObject)=>Promise.resolve(messageObject));
slackBot.on("start",function(){// define channel, where bot exist. You can adjust it there https://my.slack.com/services  
console.log("on start");}).on("message",(()=>{var _ref2=_asyncToGenerator(function*(data){try{const req=yield getMessageFormatter.format(data);for(const bot of _index2.default){let alreadyCalled=false;for(const actor of bot.actorList){try{if(!actor.filter(req,alreadyCalled))continue;const res=yield actor.action.call(slackBot,req,process.env.NODE_SLACK_OWNER_TOKEN,slackBot);if(!res)continue;alreadyCalled=true;if(typeof res!=="object")continue;const messagePostObject=yield postMessageFormatter.format(res);const channelId=messagePostObject.channelId;const text=messagePostObject.text;messagePostObject.username=messagePostObject.username||bot.username;messagePostObject.icon_url=messagePostObject.icon_url||bot.iconUrl;messagePostObject.as_user=messagePostObject.as_user||bot.asUser;delete messagePostObject.asUser;delete messagePostObject.iconUrl;delete messagePostObject.channelId;delete messagePostObject.text;yield slackBot.postMessage(channelId,text,messagePostObject);}catch(err){console.log("ERROR at actor");console.error(err&&err.stack||err);}}}}catch(err){console.log("ERROR at onmessage");console.error(err&&err.stack||err);}});return function(_x){return _ref2.apply(this,arguments);};})()).on("open",function(){console.log("on open");}).on("close",function(){console.log("on close");slackBot.emit("error",new Error("stream closed"));}).on("error",function(err){console.log("ERROR at stream");console.error(err&&err.stack||err);setTimeout(messageLoop,0);});yield slackBot.login();});return function startSlackBot(){return _ref.apply(this,arguments);};})();// 落ちた時に自動で再起動します
let messageLoop=(()=>{var _ref3=_asyncToGenerator(function*(){let delay=arguments.length<=0||arguments[0]===undefined?1:arguments[0];try{yield startSlackBot();}catch(err){console.log("ERROR at messageLoop");console.error(err&&err.stack||err);console.log(`${delay}秒後に再接続します…`);yield(0,_sleep2.default)(delay*1000);messageLoop(Math.min(delay*2,60));}});return function messageLoop(){return _ref3.apply(this,arguments);};})();var _slackbots=require("slackbots");var _slackbots2=_interopRequireDefault(_slackbots);var _GetMessageFormatter=require("Util/GetMessageFormatter");var _GetMessageFormatter2=_interopRequireDefault(_GetMessageFormatter);var _PostMessageFormatter=require("Util/PostMessageFormatter");var _PostMessageFormatter2=_interopRequireDefault(_PostMessageFormatter);var _sleep=require("Util/sleep");var _sleep2=_interopRequireDefault(_sleep);var _index=require("./actor/index");var _index2=_interopRequireDefault(_index);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){return step("next",value);},function(err){return step("throw",err);});}}return step("next");});};}messageLoop().catch(err=>{console.error("†Unhandled Error†");console.error(err&&err.stack||err);throw err;});