"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i["return"])_i["return"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError("Invalid attempt to destructure non-iterable instance");}};}();exports.default=autoJoin;function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){return step("next",value);},function(err){return step("throw",err);});}}return step("next");});};}function autoJoin(eventType){return{filter(message,entities,alreadyCalled){const type=message.type;const subtype=message.subtype;return type===eventType;},action(message,entities,ownerClient){var _this=this;return _asyncToGenerator(function*(){let ownerInfo;for(const _ref of Object.entries(_this.dataStore.channels)){var _ref2=_slicedToArray(_ref,2);const channel=_ref2[0];const channelInfo=_ref2[1];// 既に参加していたらスルー
if(channelInfo.is_member)continue;// オーナー情報を取得する(キャッシュを行う)
ownerInfo=ownerInfo||(yield ownerClient.auth.test());// オーナーが参加してない場合は、スルー
if(channelInfo.members&&!(channelInfo.members.indexOf(ownerInfo.user_id)!==-1))continue;// オーナー権限でbotを招待する
yield ownerClient.channels.invite(channel,_this.activeUserId);}})();}};}module.exports=exports["default"];