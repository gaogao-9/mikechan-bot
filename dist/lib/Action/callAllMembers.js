"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=callAllMembers;var _client=require("@slack/client");var _randomReply=require("Action/randomReply");var _randomReply2=_interopRequireDefault(_randomReply);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{return Promise.resolve(value).then(function(value){return step("next",value);},function(err){return step("throw",err);});}}return step("next");});};}function callAllMembers(username,wordList,matchRegExp){let useAlreadyCalled=arguments.length<=3||arguments[3]===undefined?true:arguments[3];const randomReplyObject=(0,_randomReply2.default)(username,wordList,matchRegExp,useAlreadyCalled);return{filter:randomReplyObject.filter,action(message,entities,ownerClient){var _this=this;return _asyncToGenerator(function*(){const channel=message.channel;const user=message.user;const channelInfo=_this.dataStore.getChannelById(channel);if(!channelInfo)return;for(const user of Object.keys(_this.dataStore.users)){// 既に参加していたらスルー
if(channelInfo.members.indexOf(user)!==-1)continue;// オーナー権限でメンバーを招待する
yield ownerClient.channels.invite(channelInfo.id,user);}return randomReplyObject.action.call(_this,message,entities,ownerClient);})();}};}module.exports=exports["default"];